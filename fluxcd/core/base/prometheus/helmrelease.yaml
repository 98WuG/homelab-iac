---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: prometheus
spec:
  chart:
    spec:
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  interval: 10m0s
  timeout: 10m0s
  values:
    grafana:
      admin:
        existingSecret: grafana-admin-credentials
        userKey: user
        passwordKey: password
      envFromSecrets:
      - name: grafana-oauth
        optional: false
      grafana.ini:
        auth:
          disable_login_form: true
        server:
          root_url: https://grafana.${DOMAIN}/
      deploymentStrategy:
        type: Recreate
      ingress:
        enabled: true
        ingressClassName: nginx
        hosts:
        - grafana.${DOMAIN}
      persistence:
        type: pvc
        enabled: true
        accessModes:
        - ReadWriteOnce
        size: 10Gi
    alertmanager:
      ingress:
        enabled: true
        ingressClassName: nginx
        hosts:
        - alertmanager.${DOMAIN}
    prometheus:
      enabled: true
      prometheusSpec:
        replicas: 1
        podMonitorSelectorNilUsesHelmValues: "false"
        serviceMonitorSelectorNilUsesHelmValues: "false"
        ruleSelectorNilUsesHelmValues: "false"
        probeSelectorNilUsesHelmValues: "false"
        replicaExternalLabelName: "replica"
        retention: 24h
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-rbd-sc
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 16Gi
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance
        - action: drop
          sourceLabels:
          - id
          regex: '.*'
    kubeControllerManager:
      enabled: true
      endpoints: &endpoints
      - 10.40.0.81
      - 10.40.0.82
      - 10.40.0.83
    coreDns:
      enabled: true
    kubeDns:
      enabled: false
    kubeEtcd:
      enabled: true
      endpoints: *endpoints
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    kubeScheduler:
      enabled: true
      endpoints: *endpoints
    kubeProxy:
      enabled: true
      endpoints: *endpoints
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      selfMonitor:
        enabled: true
      prometheus:
        monitor:
          enabled: true
          relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
            - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    nodeExporter:
      enabled: true
      serviceMonitor:
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      podLabels:
        jobLabel: node-exporter
      extraArgs:
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
      - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
      service:
        portName: http-metrics
      prometheus:
        monitor:
          enabled: true
          relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
            - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 2048Mi
    prometheusOperator:
      enabled: true
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 200m
            memory: 50Mi
          limits:
            memory: 100Mi
    thanosRuler:
      enabled: false

